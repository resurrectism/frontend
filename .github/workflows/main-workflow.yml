name: Main Workflow
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  install-deps:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Set up Node.js 16.13.0
        uses: actions/setup-node@v1
        with:
          node-version: 16.13.0

      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-modules-

      - name: Install dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install

  format-lint:
    needs: install-deps
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Restore cache
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-modules-

      - name: Run prettier format check
        run: yarn format:check

      - name: Run eslint check
        run: yarn lint:check

  build:
    needs: install-deps
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Restore cache
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-modules-

      - name: Build
        run: yarn build

      - name: Archive dist folder
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist

  deploy:
    # if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    needs: [install-deps, format-lint, build]
    runs-on: ubuntu-latest

    steps:
      - name: Download dist folder
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist/

      - name: Set up S3cmd 
        uses: s3-actions/s3cmd@v1.1
        with:
          provider: linode 
          region: 'eu-central-1'
          access_key: ${{ secrets.LINODE_S3_ACCESS_KEY }}
          secret_key: ${{ secrets.LINODE_S3_SECRET_KEY }}

      - name: Interact with object storage
        run: |
          s3cmd sync --no-mime-magic --delete-removed --delete-after --acl-public dist/ s3://resurrectism.denismail.space

      - name: Get info
        run: s3cmd ws-info s3://resurrectism.denismail.space
